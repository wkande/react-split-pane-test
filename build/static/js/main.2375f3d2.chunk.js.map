{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","items","push","i","className","split","minSize","defaultSize","allowResize","initialSize","maxSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAe,I,YC4CAA,MAxCf,WAIE,IAAMC,EAAQ,GACdA,EAAMC,KAAK,yEAAQ,MACnB,IAAI,IAAIC,EAAE,EAAGA,EAAE,IAAKA,IAClBF,EAAMC,KAAK,6BAAaC,GAAJA,IAQtB,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,CAAWC,MAAM,WAAWC,QAAS,GAAIC,YAAa,IAAKC,aAAa,EAAxE,UACE,cAAC,IAAD,CAAMJ,UAAU,UAAUK,YAAY,QAAQH,QAAQ,QAAQI,QAAQ,QAAtE,SACE,sBAAKN,UAAU,cAAf,mBACQ,uBADR,iBAEE,uBAFF,gBAEoB,uBACjBH,OAIL,eAAC,IAAD,CAAMG,UAAU,cAAhB,wEAEE,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBACnH,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBACnH,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAJrH,eClBOO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2375f3d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport SplitPane, { Pane } from 'react-split-pane';\n\nfunction App() {\n\n  //const elements = ['one', 'two', 'three'];\n\n  const items = []\n  items.push(<li key=\"x\">Dude how will this wrap if it is to long</li>)\n  for(var i=0; i<300; i++){\n    items.push(<li key={i}>{i}</li>)\n  }\n\n  /*for (const [index, value] of elements.entries()) {\n    items.push(<li key={index}>{value}</li>)\n  }*/\n\n\n  return (\n    <div className=\"App\">\n      <SplitPane split=\"vertical\" minSize={50} defaultSize={200} allowResize={false}>\n        <Pane className=\"navPane\" initialSize=\"600px\" minSize=\"600px\" maxSize=\"600px\"> \n          <div className=\"paneScoller\">\n            Docula<br/>Docs-Like-Code\n            <br/> Made simple.<hr/>\n            {items}\n          </div>\n        </Pane>\n \n        <Pane className=\"paneScoller\">\n          Using a Pane allows you to specify any constraints directly\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n\n          END\n        </Pane>\n      </SplitPane>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}